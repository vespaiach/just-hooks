{"version":3,"file":"just-hooks.umd.production.min.js","sources":["../src/useTransferList.ts","../src/wrapFetch.ts"],"sourcesContent":["import { useState } from 'react';\n\nconst equalityCompare: (item: any, addOrRemoveItem: any) => boolean = (\n  item,\n  addOrRemoveItem\n) => {\n  const typeofItem = typeof item;\n  const typeofAddOrRemoveItem = typeof addOrRemoveItem;\n\n  if (\n    (typeofItem === 'number' && typeofAddOrRemoveItem === 'number') ||\n    (typeofItem === 'string' && typeofAddOrRemoveItem === 'string')\n  ) {\n    return item === addOrRemoveItem;\n  }\n\n  return item.id === addOrRemoveItem.id;\n};\n\nexport interface KeyedObject {\n  id: string | number;\n}\n\n/**\n *\n * @param initialStartList list of initial start items. Item's type can be number, string or object that has an `id` field\n * @param initialEndList (optional) list of initial end items. Item's type can be number, string or object that has an `id` field\n * @returns\n * {\n *   startList: list of initial items,\n *   endList: list of items that have been transfered to,\n *   transfer(): transfer item to end list,\n *   withdraw(): withdraw item back to start list\n * }\n */\nexport default function useTransferList<\n  T extends number | string | KeyedObject\n>(initialStartList: T[], initialEndList?: T[]) {\n  const [startList, setStartList] = useState<T[]>(initialStartList);\n  const [endList, setEndList] = useState<T[]>(initialEndList || []);\n\n  const transfer = (item: T) => {\n    const index = startList.findIndex(it => equalityCompare(it, item));\n    if (index > -1) {\n      const items = startList.splice(index, 1);\n      setEndList([...endList, ...items]);\n      setStartList(startList);\n    }\n  };\n\n  const withdraw = (item: T) => {\n    const index = endList.findIndex(it => equalityCompare(it, item));\n    if (index > -1) {\n      const items = endList.splice(index, 1);\n      setStartList([...startList, ...items]);\n      setEndList(endList);\n    }\n  };\n\n  return {\n    startList,\n    endList,\n    transfer,\n    withdraw,\n  };\n}\n","export class APIError<T> extends Error {\n  public data: T | undefined;\n  private code: string | undefined;\n\n  constructor(message: string, code?: string, data?: T) {\n    super(message);\n\n    this.code = code || 'Unknown';\n    this.data = data;\n  }\n\n  public toString() {\n    return `[${this.code}] ${this.message}`;\n  }\n}\nconst getResponseType = (contentType: string) => {\n  if (\n    contentType.indexOf('application/json') > -1 ||\n    contentType.indexOf('application/ld+json') > -1 ||\n    contentType.indexOf('application/vnd.api+json') > -1\n  ) {\n    return 'json';\n  } else if (\n    contentType.indexOf('text/') > -1 ||\n    contentType.indexOf('application/javascript') > -1\n  ) {\n    return 'text';\n  } else if (contentType.indexOf('multipart/form-data') > -1) {\n    return 'formData';\n  } else if (\n    contentType.indexOf('image/') > -1 ||\n    contentType.indexOf('audio/') > -1 ||\n    contentType.indexOf('application/zip') > -1 ||\n    contentType.indexOf('application/pdf') > -1 ||\n    contentType.indexOf('application/msword') > -1\n  ) {\n    return 'blob';\n  } else {\n    return null;\n  }\n};\n\nexport type APIResponse<T = unknown> =\n  | {\n      ok: true;\n      data: T;\n      origin: Response;\n    }\n  | {\n      ok: false;\n      error: APIError<T>;\n      origin?: Response;\n    };\n\nexport async function safeFetch<T = unknown>(\n  input: RequestInfo,\n  init?: RequestInit\n): Promise<APIResponse<T>> {\n  try {\n    const response = await fetch(input, init);\n    const contenttype = response.headers.get('Content-Type');\n    const responseType = contenttype\n      ? getResponseType(contenttype.toLocaleLowerCase())\n      : null;\n\n    let data;\n    let ok = response.ok;\n    if (responseType) {\n      try {\n        data = (await response[responseType]()) as T;\n        if (!response.ok) {\n          data = new APIError(\n            response.statusText,\n            String(response.status),\n            data\n          );\n        }\n      } catch (error) {\n        ok = false;\n        data = new APIError(error.toString());\n      }\n    } else {\n      data = new APIError('Unsupport header content-type: ' + contenttype);\n      ok = false;\n    }\n\n    if (ok) {\n      return {\n        ok: true,\n        data: data as T,\n        origin: response,\n      };\n    } else {\n      return {\n        ok: false,\n        error: data as APIError<T>,\n        origin: response,\n      };\n    }\n  } catch {\n    return {\n      ok: false,\n      error: new APIError('Unexpected error'),\n    };\n  }\n}\n"],"names":["equalityCompare","item","addOrRemoveItem","typeofItem","typeofAddOrRemoveItem","id","APIError","Error","constructor","message","code","data","toString","this","async","input","init","response","fetch","contenttype","headers","get","responseType","contentType","toLocaleLowerCase","indexOf","ok","statusText","String","status","error","origin","initialStartList","initialEndList","startList","setStartList","useState","endList","setEndList","transfer","index","findIndex","it","items","splice","withdraw"],"mappings":"8OAEA,MAAMA,EAAgE,CACpEC,EACAC,WAEMC,SAAoBF,EACpBG,SAA+BF,QAGnB,WAAfC,GAAqD,WAA1BC,GACZ,WAAfD,GAAqD,WAA1BC,EAErBH,IAASC,EAGXD,EAAKI,KAAOH,EAAgBG,UChBxBC,UAAoBC,MAI/BC,YAAYC,EAAiBC,EAAeC,SACpCF,QAEDC,KAAOA,GAAQ,eACfC,KAAOA,EAGPC,qBACMC,KAAKH,SAASG,KAAKJ,oCA0C3BK,eACLC,EACAC,aAGQC,QAAiBC,MAAMH,EAAOC,GAC9BG,EAAcF,EAASG,QAAQC,IAAI,gBACnCC,EAAeH,GA9CAI,EA+CDJ,EAAYK,qBA7CpBC,QAAQ,qBAAuB,GAC3CF,EAAYE,QAAQ,wBAA0B,GAC9CF,EAAYE,QAAQ,6BAA+B,EAE5C,OAEPF,EAAYE,QAAQ,UAAY,GAChCF,EAAYE,QAAQ,2BAA6B,EAE1C,OACEF,EAAYE,QAAQ,wBAA0B,EAChD,WAEPF,EAAYE,QAAQ,WAAa,GACjCF,EAAYE,QAAQ,WAAa,GACjCF,EAAYE,QAAQ,oBAAsB,GAC1CF,EAAYE,QAAQ,oBAAsB,GAC1CF,EAAYE,QAAQ,uBAAyB,EAEtC,OAEA,KAyBH,SAEAd,EACAe,EAAKT,EAASS,MACdJ,MAEAX,QAAcM,EAASK,KAClBL,EAASS,KACZf,EAAO,IAAIL,EACTW,EAASU,WACTC,OAAOX,EAASY,QAChBlB,IAGJ,MAAOmB,GACPJ,GAAK,EACLf,EAAO,IAAIL,EAASwB,EAAMlB,iBAG5BD,EAAO,IAAIL,EAAS,kCAAoCa,GACxDO,GAAK,SAGHA,EACK,CACLA,IAAI,EACJf,KAAMA,EACNoB,OAAQd,GAGH,CACLS,IAAI,EACJI,MAAOnB,EACPoB,OAAQd,GAGZ,YACO,CACLS,IAAI,EACJI,MAAO,IAAIxB,EAAS,qBAvFDiB,IAAAA,8BDsBvBS,EAAuBC,SAChBC,EAAWC,GAAgBC,WAAcJ,IACzCK,EAASC,GAAcF,WAAcH,GAAkB,UAoBvD,CACLC,UAAAA,EACAG,QAAAA,EACAE,SArBgBtC,UACVuC,EAAQN,EAAUO,UAAUC,GAAM1C,EAAgB0C,EAAIzC,OACxDuC,GAAS,EAAG,OACRG,EAAQT,EAAUU,OAAOJ,EAAO,GACtCF,EAAW,IAAID,KAAYM,IAC3BR,EAAaD,KAiBfW,SAbgB5C,UACVuC,EAAQH,EAAQI,UAAUC,GAAM1C,EAAgB0C,EAAIzC,OACtDuC,GAAS,EAAG,OACRG,EAAQN,EAAQO,OAAOJ,EAAO,GACpCL,EAAa,IAAID,KAAcS,IAC/BL,EAAWD"}