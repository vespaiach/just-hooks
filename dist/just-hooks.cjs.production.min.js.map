{"version":3,"file":"just-hooks.cjs.production.min.js","sources":["../src/useTransferList.ts"],"sourcesContent":["import { useState } from 'react';\n\nconst defaultEqualityCompare: (item: any, addOrRemoveItem: any) => boolean = (\n  item,\n  addOrRemoveItem\n) => {\n  const typeofItem = typeof item;\n  const typeofAddOrRemoveItem = typeof addOrRemoveItem;\n\n  if (\n    (typeofItem === 'number' && typeofAddOrRemoveItem === 'number') ||\n    (typeofItem === 'string' && typeofAddOrRemoveItem === 'string')\n  ) {\n    return item === addOrRemoveItem;\n  }\n\n  return item.id === addOrRemoveItem.id;\n};\n\nexport interface KeyedObject {\n  id: string | number;\n}\n\n/**\n *\n * @param initialList list of initial items. Item's type can be number, string or object that has an `id` field\n * @param equalityCompareFn (optional) comparing function filter out items that are removed from lists. Return true will keep items or false to remove them\n * @returns\n * {\n *   start: list of initial items,\n *   end: list of items that have been transfered to,\n *   add(): transfer item to end list,\n *   remove(): transfer item back to start list\n * }\n */\nexport default function useTransferList<\n  T extends number | string | KeyedObject\n>(\n  initialList: T[],\n  equalityCompareFn: (\n    item: T,\n    addOrRemoveItem: T\n  ) => boolean = defaultEqualityCompare\n) {\n  const [start, setStart] = useState<T[]>(initialList);\n  const [end, setEnd] = useState<T[]>([]);\n\n  const add = (item: T) => {\n    const index = start.findIndex(it => equalityCompareFn(it, item));\n    if (index > -1) {\n      setStart(start.filter(it => !equalityCompareFn(item, it)));\n      setEnd([...end, item]);\n    }\n  };\n\n  const remove = (item: T) => {\n    const index = end.findIndex(it => equalityCompareFn(it, item));\n    if (index > -1) {\n      setStart([...start, item]);\n      setEnd(end.filter(it => !equalityCompareFn(item, it)));\n    }\n  };\n\n  return {\n    start,\n    end,\n    add,\n    remove,\n  };\n}\n"],"names":["defaultEqualityCompare","item","addOrRemoveItem","typeofItem","typeofAddOrRemoveItem","id","initialList","equalityCompareFn","useState","start","setStart","end","setEnd","add","findIndex","it","filter","remove"],"mappings":"2FAEMA,EAAuE,SAC3EC,EACAC,OAEMC,SAAoBF,EACpBG,SAA+BF,QAGnB,WAAfC,GAAqD,WAA1BC,GACZ,WAAfD,GAAqD,WAA1BC,EAErBH,IAASC,EAGXD,EAAKI,KAAOH,EAAgBG,qCAsBnCC,EACAC,YAAAA,IAAAA,EAGeP,SAEWQ,WAAcF,GAAjCG,OAAOC,SACQF,WAAc,IAA7BG,OAAKC,aAkBL,CACLH,MAAAA,EACAE,IAAAA,EACAE,IAnBU,SAACZ,GACGQ,EAAMK,WAAU,SAAAC,UAAMR,EAAkBQ,EAAId,OAC7C,IACXS,EAASD,EAAMO,QAAO,SAAAD,UAAOR,EAAkBN,EAAMc,OACrDH,YAAWD,GAAKV,OAgBlBgB,OAZa,SAAChB,GACAU,EAAIG,WAAU,SAAAC,UAAMR,EAAkBQ,EAAId,OAC3C,IACXS,YAAaD,GAAOR,KACpBW,EAAOD,EAAIK,QAAO,SAAAD,UAAOR,EAAkBN,EAAMc"}