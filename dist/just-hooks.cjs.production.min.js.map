{"version":3,"file":"just-hooks.cjs.production.min.js","sources":["../src/useTransferList.ts"],"sourcesContent":["import { useState } from 'react';\n\nconst equalityCompare: (item: any, addOrRemoveItem: any) => boolean = (\n  item,\n  addOrRemoveItem\n) => {\n  const typeofItem = typeof item;\n  const typeofAddOrRemoveItem = typeof addOrRemoveItem;\n\n  if (\n    (typeofItem === 'number' && typeofAddOrRemoveItem === 'number') ||\n    (typeofItem === 'string' && typeofAddOrRemoveItem === 'string')\n  ) {\n    return item === addOrRemoveItem;\n  }\n\n  return item.id === addOrRemoveItem.id;\n};\n\nexport interface KeyedObject {\n  id: string | number;\n}\n\n/**\n *\n * @param initialStartList list of initial start items. Item's type can be number, string or object that has an `id` field\n * @param initialEndList (optional) list of initial end items. Item's type can be number, string or object that has an `id` field\n * @returns\n * {\n *   startList: list of initial items,\n *   endList: list of items that have been transfered to,\n *   transfer(): transfer item to end list,\n *   withdraw(): withdraw item back to start list\n * }\n */\nexport default function useTransferList<\n  T extends number | string | KeyedObject\n>(initialStartList: T[], initialEndList?: T[]) {\n  const [startList, setStartList] = useState<T[]>(initialStartList);\n  const [endList, setEndList] = useState<T[]>(initialEndList || []);\n\n  const transfer = (item: T) => {\n    const index = startList.findIndex(it => equalityCompare(it, item));\n    if (index > -1) {\n      const items = startList.splice(index, 1);\n      setEndList([...endList, ...items]);\n      setStartList(startList);\n    }\n  };\n\n  const withdraw = (item: T) => {\n    const index = endList.findIndex(it => equalityCompare(it, item));\n    if (index > -1) {\n      const items = endList.splice(index, 1);\n      setStartList([...startList, ...items]);\n      setEndList(endList);\n    }\n  };\n\n  return {\n    startList,\n    endList,\n    transfer,\n    withdraw,\n  };\n}\n"],"names":["equalityCompare","item","addOrRemoveItem","typeofItem","typeofAddOrRemoveItem","id","initialStartList","initialEndList","useState","startList","setStartList","endList","setEndList","transfer","index","findIndex","it","items","splice","withdraw"],"mappings":"2FAEMA,EAAgE,SACpEC,EACAC,OAEMC,SAAoBF,EACpBG,SAA+BF,QAGnB,WAAfC,GAAqD,WAA1BC,GACZ,WAAfD,GAAqD,WAA1BC,EAErBH,IAASC,EAGXD,EAAKI,KAAOH,EAAgBG,qCAqBnCC,EAAuBC,SACWC,WAAcF,GAAzCG,OAAWC,SACYF,WAAcD,GAAkB,IAAvDI,OAASC,aAoBT,CACLH,UAAAA,EACAE,QAAAA,EACAE,SArBe,SAACZ,OACVa,EAAQL,EAAUM,WAAU,SAAAC,UAAMhB,EAAgBgB,EAAIf,SACxDa,GAAS,EAAG,KACRG,EAAQR,EAAUS,OAAOJ,EAAO,GACtCF,YAAeD,EAAYM,IAC3BP,EAAaD,KAiBfU,SAbe,SAAClB,OACVa,EAAQH,EAAQI,WAAU,SAAAC,UAAMhB,EAAgBgB,EAAIf,SACtDa,GAAS,EAAG,KACRG,EAAQN,EAAQO,OAAOJ,EAAO,GACpCJ,YAAiBD,EAAcQ,IAC/BL,EAAWD"}