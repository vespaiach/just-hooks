{"version":3,"file":"just-hooks.esm.js","sources":["../src/useTransferList.ts"],"sourcesContent":["import { useState } from 'react';\n\nconst equalityCompare: (item: any, addOrRemoveItem: any) => boolean = (\n  item,\n  addOrRemoveItem\n) => {\n  const typeofItem = typeof item;\n  const typeofAddOrRemoveItem = typeof addOrRemoveItem;\n\n  if (\n    (typeofItem === 'number' && typeofAddOrRemoveItem === 'number') ||\n    (typeofItem === 'string' && typeofAddOrRemoveItem === 'string')\n  ) {\n    return item === addOrRemoveItem;\n  }\n\n  return item.id === addOrRemoveItem.id;\n};\n\nexport interface KeyedObject {\n  id: string | number;\n}\n\n/**\n *\n * @param initialStartList list of initial start items. Item's type can be number, string or object that has an `id` field\n * @param initialEndList (optional) list of initial end items. Item's type can be number, string or object that has an `id` field\n * @returns\n * {\n *   startList: list of initial items,\n *   endList: list of items that have been transfered to,\n *   transfer(): transfer item to end list,\n *   withdraw(): withdraw item back to start list\n * }\n */\nexport default function useTransferList<\n  T extends number | string | KeyedObject\n>(initialStartList: T[], initialEndList?: T[]) {\n  const [startList, setStartList] = useState<T[]>(initialStartList);\n  const [endList, setEndList] = useState<T[]>(initialEndList || []);\n\n  const transfer = (item: T) => {\n    const index = startList.findIndex(it => equalityCompare(it, item));\n    if (index > -1) {\n      const items = startList.splice(index, 1);\n      setEndList([...endList, ...items]);\n      setStartList(startList);\n    }\n  };\n\n  const withdraw = (item: T) => {\n    const index = endList.findIndex(it => equalityCompare(it, item));\n    if (index > -1) {\n      const items = endList.splice(index, 1);\n      setStartList([...startList, ...items]);\n      setEndList(endList);\n    }\n  };\n\n  return {\n    startList,\n    endList,\n    transfer,\n    withdraw,\n  };\n}\n"],"names":["equalityCompare","item","addOrRemoveItem","typeofItem","typeofAddOrRemoveItem","id","useTransferList","initialStartList","initialEndList","useState","startList","setStartList","endList","setEndList","transfer","index","findIndex","it","items","splice","withdraw"],"mappings":";;AAEA,IAAMA,eAAe,GAAiD,SAAhEA,eAAgE,CACpEC,IADoE,EAEpEC,eAFoE;AAIpE,MAAMC,UAAU,GAAG,OAAOF,IAA1B;AACA,MAAMG,qBAAqB,GAAG,OAAOF,eAArC;;AAEA,MACGC,UAAU,KAAK,QAAf,IAA2BC,qBAAqB,KAAK,QAAtD,IACCD,UAAU,KAAK,QAAf,IAA2BC,qBAAqB,KAAK,QAFxD,EAGE;AACA,WAAOH,IAAI,KAAKC,eAAhB;AACD;;AAED,SAAOD,IAAI,CAACI,EAAL,KAAYH,eAAe,CAACG,EAAnC;AACD,CAfD;AAqBA;;;;;;;;;;;;;;SAYwBC,gBAEtBC,kBAAuBC;kBACWC,QAAQ,CAAMF,gBAAN;MAAnCG;MAAWC;;mBACYF,QAAQ,CAAMD,cAAc,IAAI,EAAxB;MAA/BI;MAASC;;AAEhB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACb,IAAD;AACf,QAAMc,KAAK,GAAGL,SAAS,CAACM,SAAV,CAAoB,UAAAC,EAAE;AAAA,aAAIjB,eAAe,CAACiB,EAAD,EAAKhB,IAAL,CAAnB;AAAA,KAAtB,CAAd;;AACA,QAAIc,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,UAAMG,KAAK,GAAGR,SAAS,CAACS,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB,CAAd;AACAF,MAAAA,UAAU,WAAKD,OAAL,EAAiBM,KAAjB,EAAV;AACAP,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD;AACF,GAPD;;AASA,MAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACnB,IAAD;AACf,QAAMc,KAAK,GAAGH,OAAO,CAACI,SAAR,CAAkB,UAAAC,EAAE;AAAA,aAAIjB,eAAe,CAACiB,EAAD,EAAKhB,IAAL,CAAnB;AAAA,KAApB,CAAd;;AACA,QAAIc,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,UAAMG,KAAK,GAAGN,OAAO,CAACO,MAAR,CAAeJ,KAAf,EAAsB,CAAtB,CAAd;AACAJ,MAAAA,YAAY,WAAKD,SAAL,EAAmBQ,KAAnB,EAAZ;AACAL,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD;AACF,GAPD;;AASA,SAAO;AACLF,IAAAA,SAAS,EAATA,SADK;AAELE,IAAAA,OAAO,EAAPA,OAFK;AAGLE,IAAAA,QAAQ,EAARA,QAHK;AAILM,IAAAA,QAAQ,EAARA;AAJK,GAAP;AAMD;;;;"}