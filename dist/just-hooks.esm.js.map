{"version":3,"file":"just-hooks.esm.js","sources":["../src/useTransferList.ts"],"sourcesContent":["import { useState } from 'react';\n\nconst defaultEqualityCompare: (item: any, addOrRemoveItem: any) => boolean = (\n  item,\n  addOrRemoveItem\n) => {\n  const typeofItem = typeof item;\n  const typeofAddOrRemoveItem = typeof addOrRemoveItem;\n\n  if (\n    (typeofItem === 'number' && typeofAddOrRemoveItem === 'number') ||\n    (typeofItem === 'string' && typeofAddOrRemoveItem === 'string')\n  ) {\n    return item === addOrRemoveItem;\n  }\n\n  return item.id === addOrRemoveItem.id;\n};\n\nexport interface KeyedObject {\n  id: string | number;\n}\n\n/**\n *\n * @param initialList list of initial items. Item's type can be number, string or object that has an `id` field\n * @param equalityCompareFn (optional) comparing function filter out items that are removed from lists. Return true will keep items or false to remove them\n * @returns\n * {\n *   start: list of initial items,\n *   end: list of items that have been transfered to,\n *   add(): transfer item to end list,\n *   remove(): transfer item back to start list\n * }\n */\nexport default function useTransferList<\n  T extends number | string | KeyedObject\n>(\n  initialList: T[],\n  equalityCompareFn: (\n    item: T,\n    addOrRemoveItem: T\n  ) => boolean = defaultEqualityCompare\n) {\n  const [start, setStart] = useState<T[]>(initialList);\n  const [end, setEnd] = useState<T[]>([]);\n\n  const add = (item: T) => {\n    const index = start.findIndex(it => equalityCompareFn(it, item));\n    if (index > -1) {\n      setStart(start.filter(it => !equalityCompareFn(item, it)));\n      setEnd([...end, item]);\n    }\n  };\n\n  const remove = (item: T) => {\n    const index = end.findIndex(it => equalityCompareFn(it, item));\n    if (index > -1) {\n      setStart([...start, item]);\n      setEnd(end.filter(it => !equalityCompareFn(item, it)));\n    }\n  };\n\n  return {\n    start,\n    end,\n    add,\n    remove,\n  };\n}\n"],"names":["defaultEqualityCompare","item","addOrRemoveItem","typeofItem","typeofAddOrRemoveItem","id","useTransferList","initialList","equalityCompareFn","useState","start","setStart","end","setEnd","add","index","findIndex","it","filter","remove"],"mappings":";;AAEA,IAAMA,sBAAsB,GAAiD,SAAvEA,sBAAuE,CAC3EC,IAD2E,EAE3EC,eAF2E;AAI3E,MAAMC,UAAU,GAAG,OAAOF,IAA1B;AACA,MAAMG,qBAAqB,GAAG,OAAOF,eAArC;;AAEA,MACGC,UAAU,KAAK,QAAf,IAA2BC,qBAAqB,KAAK,QAAtD,IACCD,UAAU,KAAK,QAAf,IAA2BC,qBAAqB,KAAK,QAFxD,EAGE;AACA,WAAOH,IAAI,KAAKC,eAAhB;AACD;;AAED,SAAOD,IAAI,CAACI,EAAL,KAAYH,eAAe,CAACG,EAAnC;AACD,CAfD;AAqBA;;;;;;;;;;;;;;SAYwBC,gBAGtBC,aACAC;MAAAA;AAAAA,IAAAA,oBAGeR;;;kBAEWS,QAAQ,CAAMF,WAAN;MAA3BG;MAAOC;;mBACQF,QAAQ,CAAM,EAAN;MAAvBG;MAAKC;;AAEZ,MAAMC,GAAG,GAAG,SAANA,GAAM,CAACb,IAAD;AACV,QAAMc,KAAK,GAAGL,KAAK,CAACM,SAAN,CAAgB,UAAAC,EAAE;AAAA,aAAIT,iBAAiB,CAACS,EAAD,EAAKhB,IAAL,CAArB;AAAA,KAAlB,CAAd;;AACA,QAAIc,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdJ,MAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAa,UAAAD,EAAE;AAAA,eAAI,CAACT,iBAAiB,CAACP,IAAD,EAAOgB,EAAP,CAAtB;AAAA,OAAf,CAAD,CAAR;AACAJ,MAAAA,MAAM,WAAKD,GAAL,GAAUX,IAAV,GAAN;AACD;AACF,GAND;;AAQA,MAAMkB,MAAM,GAAG,SAATA,MAAS,CAAClB,IAAD;AACb,QAAMc,KAAK,GAAGH,GAAG,CAACI,SAAJ,CAAc,UAAAC,EAAE;AAAA,aAAIT,iBAAiB,CAACS,EAAD,EAAKhB,IAAL,CAArB;AAAA,KAAhB,CAAd;;AACA,QAAIc,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdJ,MAAAA,QAAQ,WAAKD,KAAL,GAAYT,IAAZ,GAAR;AACAY,MAAAA,MAAM,CAACD,GAAG,CAACM,MAAJ,CAAW,UAAAD,EAAE;AAAA,eAAI,CAACT,iBAAiB,CAACP,IAAD,EAAOgB,EAAP,CAAtB;AAAA,OAAb,CAAD,CAAN;AACD;AACF,GAND;;AAQA,SAAO;AACLP,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,GAAG,EAAHA,GAFK;AAGLE,IAAAA,GAAG,EAAHA,GAHK;AAILK,IAAAA,MAAM,EAANA;AAJK,GAAP;AAMD;;;;"}